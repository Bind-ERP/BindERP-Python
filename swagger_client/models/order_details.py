# coding: utf-8

"""
    Bind ERP API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.order_details_product import OrderDetailsProduct  # noqa: F401,E501
from swagger_client.models.order_details_service import OrderDetailsService  # noqa: F401,E501


class OrderDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'client_id': 'str',
        'client_name': 'str',
        'price_list_name': 'str',
        'price_list_id': 'str',
        'location_name': 'str',
        'location_id': 'str',
        'warehouse_id': 'str',
        'warehouse_name': 'str',
        'order_date': 'datetime',
        'comments': 'str',
        'number': 'int',
        'address': 'str',
        'client_contact': 'str',
        'phone_number': 'str',
        'employee_name': 'str',
        'employee_id': 'str',
        'status_code': 'int',
        'purchase_order': 'str',
        'status': 'str',
        'currency_name': 'str',
        'currency_id': 'str',
        'exchange_rate': 'float',
        'rfc': 'str',
        'service_subtotal': 'float',
        'product_subtotal': 'float',
        'discount': 'float',
        'vat_rate': 'float',
        'vat': 'float',
        'discount_type': 'int',
        'ieps': 'float',
        'iepsrate': 'float',
        'isr_ret': 'float',
        'isr_ret_rate': 'float',
        'vat_ret': 'float',
        'vat_ret_rate': 'float',
        'total': 'float',
        'products': 'list[OrderDetailsProduct]',
        'services': 'list[OrderDetailsService]'
    }

    attribute_map = {
        'id': 'ID',
        'client_id': 'ClientID',
        'client_name': 'ClientName',
        'price_list_name': 'PriceListName',
        'price_list_id': 'PriceListID',
        'location_name': 'LocationName',
        'location_id': 'LocationID',
        'warehouse_id': 'WarehouseID',
        'warehouse_name': 'WarehouseName',
        'order_date': 'OrderDate',
        'comments': 'Comments',
        'number': 'Number',
        'address': 'Address',
        'client_contact': 'ClientContact',
        'phone_number': 'PhoneNumber',
        'employee_name': 'EmployeeName',
        'employee_id': 'EmployeeID',
        'status_code': 'StatusCode',
        'purchase_order': 'PurchaseOrder',
        'status': 'Status',
        'currency_name': 'CurrencyName',
        'currency_id': 'CurrencyID',
        'exchange_rate': 'ExchangeRate',
        'rfc': 'RFC',
        'service_subtotal': 'ServiceSubtotal',
        'product_subtotal': 'ProductSubtotal',
        'discount': 'Discount',
        'vat_rate': 'VATRate',
        'vat': 'VAT',
        'discount_type': 'DiscountType',
        'ieps': 'IEPS',
        'iepsrate': 'IEPSRATE',
        'isr_ret': 'ISRRet',
        'isr_ret_rate': 'ISRRetRate',
        'vat_ret': 'VatRet',
        'vat_ret_rate': 'VatRetRate',
        'total': 'Total',
        'products': 'Products',
        'services': 'Services'
    }

    def __init__(self, id=None, client_id=None, client_name=None, price_list_name=None, price_list_id=None, location_name=None, location_id=None, warehouse_id=None, warehouse_name=None, order_date=None, comments=None, number=None, address=None, client_contact=None, phone_number=None, employee_name=None, employee_id=None, status_code=None, purchase_order=None, status=None, currency_name=None, currency_id=None, exchange_rate=None, rfc=None, service_subtotal=None, product_subtotal=None, discount=None, vat_rate=None, vat=None, discount_type=None, ieps=None, iepsrate=None, isr_ret=None, isr_ret_rate=None, vat_ret=None, vat_ret_rate=None, total=None, products=None, services=None):  # noqa: E501
        """OrderDetails - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._client_id = None
        self._client_name = None
        self._price_list_name = None
        self._price_list_id = None
        self._location_name = None
        self._location_id = None
        self._warehouse_id = None
        self._warehouse_name = None
        self._order_date = None
        self._comments = None
        self._number = None
        self._address = None
        self._client_contact = None
        self._phone_number = None
        self._employee_name = None
        self._employee_id = None
        self._status_code = None
        self._purchase_order = None
        self._status = None
        self._currency_name = None
        self._currency_id = None
        self._exchange_rate = None
        self._rfc = None
        self._service_subtotal = None
        self._product_subtotal = None
        self._discount = None
        self._vat_rate = None
        self._vat = None
        self._discount_type = None
        self._ieps = None
        self._iepsrate = None
        self._isr_ret = None
        self._isr_ret_rate = None
        self._vat_ret = None
        self._vat_ret_rate = None
        self._total = None
        self._products = None
        self._services = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if client_id is not None:
            self.client_id = client_id
        if client_name is not None:
            self.client_name = client_name
        if price_list_name is not None:
            self.price_list_name = price_list_name
        if price_list_id is not None:
            self.price_list_id = price_list_id
        if location_name is not None:
            self.location_name = location_name
        if location_id is not None:
            self.location_id = location_id
        if warehouse_id is not None:
            self.warehouse_id = warehouse_id
        if warehouse_name is not None:
            self.warehouse_name = warehouse_name
        if order_date is not None:
            self.order_date = order_date
        if comments is not None:
            self.comments = comments
        if number is not None:
            self.number = number
        if address is not None:
            self.address = address
        if client_contact is not None:
            self.client_contact = client_contact
        if phone_number is not None:
            self.phone_number = phone_number
        if employee_name is not None:
            self.employee_name = employee_name
        if employee_id is not None:
            self.employee_id = employee_id
        if status_code is not None:
            self.status_code = status_code
        if purchase_order is not None:
            self.purchase_order = purchase_order
        if status is not None:
            self.status = status
        if currency_name is not None:
            self.currency_name = currency_name
        if currency_id is not None:
            self.currency_id = currency_id
        if exchange_rate is not None:
            self.exchange_rate = exchange_rate
        if rfc is not None:
            self.rfc = rfc
        if service_subtotal is not None:
            self.service_subtotal = service_subtotal
        if product_subtotal is not None:
            self.product_subtotal = product_subtotal
        if discount is not None:
            self.discount = discount
        if vat_rate is not None:
            self.vat_rate = vat_rate
        if vat is not None:
            self.vat = vat
        if discount_type is not None:
            self.discount_type = discount_type
        if ieps is not None:
            self.ieps = ieps
        if iepsrate is not None:
            self.iepsrate = iepsrate
        if isr_ret is not None:
            self.isr_ret = isr_ret
        if isr_ret_rate is not None:
            self.isr_ret_rate = isr_ret_rate
        if vat_ret is not None:
            self.vat_ret = vat_ret
        if vat_ret_rate is not None:
            self.vat_ret_rate = vat_ret_rate
        if total is not None:
            self.total = total
        if products is not None:
            self.products = products
        if services is not None:
            self.services = services

    @property
    def id(self):
        """Gets the id of this OrderDetails.  # noqa: E501


        :return: The id of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderDetails.


        :param id: The id of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def client_id(self):
        """Gets the client_id of this OrderDetails.  # noqa: E501


        :return: The client_id of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this OrderDetails.


        :param client_id: The client_id of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._client_id = client_id

    @property
    def client_name(self):
        """Gets the client_name of this OrderDetails.  # noqa: E501


        :return: The client_name of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._client_name

    @client_name.setter
    def client_name(self, client_name):
        """Sets the client_name of this OrderDetails.


        :param client_name: The client_name of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._client_name = client_name

    @property
    def price_list_name(self):
        """Gets the price_list_name of this OrderDetails.  # noqa: E501


        :return: The price_list_name of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._price_list_name

    @price_list_name.setter
    def price_list_name(self, price_list_name):
        """Sets the price_list_name of this OrderDetails.


        :param price_list_name: The price_list_name of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._price_list_name = price_list_name

    @property
    def price_list_id(self):
        """Gets the price_list_id of this OrderDetails.  # noqa: E501


        :return: The price_list_id of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._price_list_id

    @price_list_id.setter
    def price_list_id(self, price_list_id):
        """Sets the price_list_id of this OrderDetails.


        :param price_list_id: The price_list_id of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._price_list_id = price_list_id

    @property
    def location_name(self):
        """Gets the location_name of this OrderDetails.  # noqa: E501


        :return: The location_name of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._location_name

    @location_name.setter
    def location_name(self, location_name):
        """Sets the location_name of this OrderDetails.


        :param location_name: The location_name of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._location_name = location_name

    @property
    def location_id(self):
        """Gets the location_id of this OrderDetails.  # noqa: E501


        :return: The location_id of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this OrderDetails.


        :param location_id: The location_id of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._location_id = location_id

    @property
    def warehouse_id(self):
        """Gets the warehouse_id of this OrderDetails.  # noqa: E501


        :return: The warehouse_id of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """Sets the warehouse_id of this OrderDetails.


        :param warehouse_id: The warehouse_id of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._warehouse_id = warehouse_id

    @property
    def warehouse_name(self):
        """Gets the warehouse_name of this OrderDetails.  # noqa: E501


        :return: The warehouse_name of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_name

    @warehouse_name.setter
    def warehouse_name(self, warehouse_name):
        """Sets the warehouse_name of this OrderDetails.


        :param warehouse_name: The warehouse_name of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._warehouse_name = warehouse_name

    @property
    def order_date(self):
        """Gets the order_date of this OrderDetails.  # noqa: E501


        :return: The order_date of this OrderDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._order_date

    @order_date.setter
    def order_date(self, order_date):
        """Sets the order_date of this OrderDetails.


        :param order_date: The order_date of this OrderDetails.  # noqa: E501
        :type: datetime
        """

        self._order_date = order_date

    @property
    def comments(self):
        """Gets the comments of this OrderDetails.  # noqa: E501


        :return: The comments of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this OrderDetails.


        :param comments: The comments of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._comments = comments

    @property
    def number(self):
        """Gets the number of this OrderDetails.  # noqa: E501


        :return: The number of this OrderDetails.  # noqa: E501
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this OrderDetails.


        :param number: The number of this OrderDetails.  # noqa: E501
        :type: int
        """

        self._number = number

    @property
    def address(self):
        """Gets the address of this OrderDetails.  # noqa: E501


        :return: The address of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this OrderDetails.


        :param address: The address of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def client_contact(self):
        """Gets the client_contact of this OrderDetails.  # noqa: E501


        :return: The client_contact of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._client_contact

    @client_contact.setter
    def client_contact(self, client_contact):
        """Sets the client_contact of this OrderDetails.


        :param client_contact: The client_contact of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._client_contact = client_contact

    @property
    def phone_number(self):
        """Gets the phone_number of this OrderDetails.  # noqa: E501


        :return: The phone_number of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this OrderDetails.


        :param phone_number: The phone_number of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._phone_number = phone_number

    @property
    def employee_name(self):
        """Gets the employee_name of this OrderDetails.  # noqa: E501


        :return: The employee_name of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._employee_name

    @employee_name.setter
    def employee_name(self, employee_name):
        """Sets the employee_name of this OrderDetails.


        :param employee_name: The employee_name of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._employee_name = employee_name

    @property
    def employee_id(self):
        """Gets the employee_id of this OrderDetails.  # noqa: E501


        :return: The employee_id of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id):
        """Sets the employee_id of this OrderDetails.


        :param employee_id: The employee_id of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._employee_id = employee_id

    @property
    def status_code(self):
        """Gets the status_code of this OrderDetails.  # noqa: E501


        :return: The status_code of this OrderDetails.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this OrderDetails.


        :param status_code: The status_code of this OrderDetails.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def purchase_order(self):
        """Gets the purchase_order of this OrderDetails.  # noqa: E501


        :return: The purchase_order of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._purchase_order

    @purchase_order.setter
    def purchase_order(self, purchase_order):
        """Sets the purchase_order of this OrderDetails.


        :param purchase_order: The purchase_order of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._purchase_order = purchase_order

    @property
    def status(self):
        """Gets the status of this OrderDetails.  # noqa: E501


        :return: The status of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OrderDetails.


        :param status: The status of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def currency_name(self):
        """Gets the currency_name of this OrderDetails.  # noqa: E501


        :return: The currency_name of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._currency_name

    @currency_name.setter
    def currency_name(self, currency_name):
        """Sets the currency_name of this OrderDetails.


        :param currency_name: The currency_name of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._currency_name = currency_name

    @property
    def currency_id(self):
        """Gets the currency_id of this OrderDetails.  # noqa: E501


        :return: The currency_id of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._currency_id

    @currency_id.setter
    def currency_id(self, currency_id):
        """Sets the currency_id of this OrderDetails.


        :param currency_id: The currency_id of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._currency_id = currency_id

    @property
    def exchange_rate(self):
        """Gets the exchange_rate of this OrderDetails.  # noqa: E501


        :return: The exchange_rate of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._exchange_rate

    @exchange_rate.setter
    def exchange_rate(self, exchange_rate):
        """Sets the exchange_rate of this OrderDetails.


        :param exchange_rate: The exchange_rate of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._exchange_rate = exchange_rate

    @property
    def rfc(self):
        """Gets the rfc of this OrderDetails.  # noqa: E501


        :return: The rfc of this OrderDetails.  # noqa: E501
        :rtype: str
        """
        return self._rfc

    @rfc.setter
    def rfc(self, rfc):
        """Sets the rfc of this OrderDetails.


        :param rfc: The rfc of this OrderDetails.  # noqa: E501
        :type: str
        """

        self._rfc = rfc

    @property
    def service_subtotal(self):
        """Gets the service_subtotal of this OrderDetails.  # noqa: E501


        :return: The service_subtotal of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._service_subtotal

    @service_subtotal.setter
    def service_subtotal(self, service_subtotal):
        """Sets the service_subtotal of this OrderDetails.


        :param service_subtotal: The service_subtotal of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._service_subtotal = service_subtotal

    @property
    def product_subtotal(self):
        """Gets the product_subtotal of this OrderDetails.  # noqa: E501


        :return: The product_subtotal of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._product_subtotal

    @product_subtotal.setter
    def product_subtotal(self, product_subtotal):
        """Sets the product_subtotal of this OrderDetails.


        :param product_subtotal: The product_subtotal of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._product_subtotal = product_subtotal

    @property
    def discount(self):
        """Gets the discount of this OrderDetails.  # noqa: E501


        :return: The discount of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._discount

    @discount.setter
    def discount(self, discount):
        """Sets the discount of this OrderDetails.


        :param discount: The discount of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._discount = discount

    @property
    def vat_rate(self):
        """Gets the vat_rate of this OrderDetails.  # noqa: E501


        :return: The vat_rate of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._vat_rate

    @vat_rate.setter
    def vat_rate(self, vat_rate):
        """Sets the vat_rate of this OrderDetails.


        :param vat_rate: The vat_rate of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._vat_rate = vat_rate

    @property
    def vat(self):
        """Gets the vat of this OrderDetails.  # noqa: E501


        :return: The vat of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._vat

    @vat.setter
    def vat(self, vat):
        """Sets the vat of this OrderDetails.


        :param vat: The vat of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._vat = vat

    @property
    def discount_type(self):
        """Gets the discount_type of this OrderDetails.  # noqa: E501


        :return: The discount_type of this OrderDetails.  # noqa: E501
        :rtype: int
        """
        return self._discount_type

    @discount_type.setter
    def discount_type(self, discount_type):
        """Sets the discount_type of this OrderDetails.


        :param discount_type: The discount_type of this OrderDetails.  # noqa: E501
        :type: int
        """

        self._discount_type = discount_type

    @property
    def ieps(self):
        """Gets the ieps of this OrderDetails.  # noqa: E501


        :return: The ieps of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._ieps

    @ieps.setter
    def ieps(self, ieps):
        """Sets the ieps of this OrderDetails.


        :param ieps: The ieps of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._ieps = ieps

    @property
    def iepsrate(self):
        """Gets the iepsrate of this OrderDetails.  # noqa: E501


        :return: The iepsrate of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._iepsrate

    @iepsrate.setter
    def iepsrate(self, iepsrate):
        """Sets the iepsrate of this OrderDetails.


        :param iepsrate: The iepsrate of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._iepsrate = iepsrate

    @property
    def isr_ret(self):
        """Gets the isr_ret of this OrderDetails.  # noqa: E501


        :return: The isr_ret of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._isr_ret

    @isr_ret.setter
    def isr_ret(self, isr_ret):
        """Sets the isr_ret of this OrderDetails.


        :param isr_ret: The isr_ret of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._isr_ret = isr_ret

    @property
    def isr_ret_rate(self):
        """Gets the isr_ret_rate of this OrderDetails.  # noqa: E501


        :return: The isr_ret_rate of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._isr_ret_rate

    @isr_ret_rate.setter
    def isr_ret_rate(self, isr_ret_rate):
        """Sets the isr_ret_rate of this OrderDetails.


        :param isr_ret_rate: The isr_ret_rate of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._isr_ret_rate = isr_ret_rate

    @property
    def vat_ret(self):
        """Gets the vat_ret of this OrderDetails.  # noqa: E501


        :return: The vat_ret of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._vat_ret

    @vat_ret.setter
    def vat_ret(self, vat_ret):
        """Sets the vat_ret of this OrderDetails.


        :param vat_ret: The vat_ret of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._vat_ret = vat_ret

    @property
    def vat_ret_rate(self):
        """Gets the vat_ret_rate of this OrderDetails.  # noqa: E501


        :return: The vat_ret_rate of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._vat_ret_rate

    @vat_ret_rate.setter
    def vat_ret_rate(self, vat_ret_rate):
        """Sets the vat_ret_rate of this OrderDetails.


        :param vat_ret_rate: The vat_ret_rate of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._vat_ret_rate = vat_ret_rate

    @property
    def total(self):
        """Gets the total of this OrderDetails.  # noqa: E501


        :return: The total of this OrderDetails.  # noqa: E501
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this OrderDetails.


        :param total: The total of this OrderDetails.  # noqa: E501
        :type: float
        """

        self._total = total

    @property
    def products(self):
        """Gets the products of this OrderDetails.  # noqa: E501


        :return: The products of this OrderDetails.  # noqa: E501
        :rtype: list[OrderDetailsProduct]
        """
        return self._products

    @products.setter
    def products(self, products):
        """Sets the products of this OrderDetails.


        :param products: The products of this OrderDetails.  # noqa: E501
        :type: list[OrderDetailsProduct]
        """

        self._products = products

    @property
    def services(self):
        """Gets the services of this OrderDetails.  # noqa: E501


        :return: The services of this OrderDetails.  # noqa: E501
        :rtype: list[OrderDetailsService]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this OrderDetails.


        :param services: The services of this OrderDetails.  # noqa: E501
        :type: list[OrderDetailsService]
        """

        self._services = services

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrderDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
